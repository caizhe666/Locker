name: MSBuild_x86

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
  ARCH_CONFIGURATION: x86

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: run-vcpkg
      uses: lukka/run-vcpkg@v10.3
      with:
        vcpkgJsonGlob: '**/vcpkg.json'
        vcpkgGitCommitId: '75260879edfd87345260cd913f4f065c399253d1'

    - name: Restore vcpkg packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: vcpkg integrate install

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{env.ARCH_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    # Drafts your next Release notes as Pull Requests are merged into "master"
    - uses: release-drafter/release-drafter@v5
      permissions: write-all
      # (Optional) specify config name to use, relative to .github/. Default: release-drafter.yml
      # with:
      #   config-name: my-config.yml
      #   disable-autolabeler: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}